/*
 * Swagger YAML
 * This is a sample API.  You can find out more about Swagger at <a href=\"http://swagger.io\">http://swagger.io</a> or on irc.freenode.net, #swagger.  For this sample, you can use the api key \"special-key\" to test the authorization filters
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ankitasharma1410@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.demo.pokemon.exceptions;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Error model
 */
@ApiModel(description = "Error model")

public class Error {
  @JsonProperty("code")
  private String code = null;

  @JsonProperty("message")
  private String message = null;

  @JsonProperty("severity")
  private ErrorSeverity severity = null;

  @JsonProperty("source")
  private String source = null;

  @JsonProperty("target")
  private String target = null;

  @JsonProperty("innerErrors")
  private List<InnerError> innerErrors = null;

  public Error code(String code) {
    this.code = code;
    return this;
  }

   /**
   * One of a server-defined set of error codes
   * @return code
  **/
  @ApiModelProperty(required = true, value = "One of a server-defined set of error codes")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Error message(String message) {
    this.message = message;
    return this;
  }

   /**
   * A human-readable representation of the error
   * @return message
  **/
  @ApiModelProperty(required = true, value = "A human-readable representation of the error")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public Error severity(ErrorSeverity severity) {
    this.severity = severity;
    return this;
  }

   /**
   * Get severity
   * @return severity
  **/
  @ApiModelProperty(required = true, value = "")
  public ErrorSeverity getSeverity() {
    return severity;
  }

  public void setSeverity(ErrorSeverity severity) {
    this.severity = severity;
  }

  public Error source(String source) {
    this.source = source;
    return this;
  }

   /**
   * Source of the error
   * @return source
  **/
  @ApiModelProperty(value = "Source of the error")
  public String getSource() {
    return source;
  }

  public void setSource(String source) {
    this.source = source;
  }

  public Error target(String target) {
    this.target = target;
    return this;
  }

   /**
   * The target of the error
   * @return target
  **/
  @ApiModelProperty(value = "The target of the error")
  public String getTarget() {
    return target;
  }

  public void setTarget(String target) {
    this.target = target;
  }

  public Error innerErrors(List<InnerError> innerErrors) {
    this.innerErrors = innerErrors;
    return this;
  }

  public Error addInnerErrorsItem(InnerError innerErrorsItem) {
    if (this.innerErrors == null) {
      this.innerErrors = new ArrayList<InnerError>();
    }
    this.innerErrors.add(innerErrorsItem);
    return this;
  }

   /**
   * An array of errors that may have led to this reported error
   * @return innerErrors
  **/
  @ApiModelProperty(value = "An array of errors that may have led to this reported error")
  public List<InnerError> getInnerErrors() {
    return innerErrors;
  }

  public void setInnerErrors(List<InnerError> innerErrors) {
    this.innerErrors = innerErrors;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Error error = (Error) o;
    return Objects.equals(this.code, error.code) &&
        Objects.equals(this.message, error.message) &&
        Objects.equals(this.severity, error.severity) &&
        Objects.equals(this.source, error.source) &&
        Objects.equals(this.target, error.target) &&
        Objects.equals(this.innerErrors, error.innerErrors);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, message, severity, source, target, innerErrors);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Error {\n");
    
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("    innerErrors: ").append(toIndentedString(innerErrors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

